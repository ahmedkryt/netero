from datetime import datetime

import telegram
from telegram.ext import Updater, CallbackQueryHandler, MessageHandler, Filters, CallbackContext
from telegram.ext import CommandHandler
from telegram import InlineKeyboardMarkup, InlineKeyboardButton
import time
import datetime
import schedule
import logging
from threading import Thread


# –≤–∫–ª—é—á–∞–µ–º –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ
logging.basicConfig(format='%(asctime)s - %(name)s - %(levelname)s - %(message)s', level=logging.INFO)


# –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏–π —Å –∫–∞—Ä—Ç–∏–Ω–∫–æ–π
def send_photo_with_caption(update, context, caption, markup=None):
    photo_path = 'Image.jpg'
    chat_id = update.effective_chat.id
    context.bot.send_photo(chat_id=chat_id, photo=open(photo_path, 'rb'), caption=caption, reply_markup=markup)


# –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏–π –±–µ–∑ –∫–∞—Ä—Ç–∏–Ω–∫–∏
def send_messages(update, context, text, markup=None):
    chat_id = update.effective_chat.id
    context.bot.send_message(chat_id=chat_id, text=text, reply_markup=markup)


# –¥–∏–∞–ª–æ–≥ —É—Å—Ç–∞–Ω–æ–≤–∫–∞ —Ç–∞–π–º–µ—Ä–∞ –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏–π
def timer(update, context, notice):
    keyboard = [
        [InlineKeyboardButton('–ù–∞–∑–∞–¥ –≤ –º–µ–Ω—é', callback_data="–ù–∞–∑–∞–¥ –≤ –º–µ–Ω—é")]
    ]
    markup = InlineKeyboardMarkup(keyboard, one_time_keyboard=False)
    if notice:
        send_messages(update, context, '''–ù–∞–ø–∏—à–∏, –∫–æ–≥–¥–∞ –ø—Ä–∏—Å–ª–∞—Ç—å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ, –≤ —Ç–∞–∫–æ–π —Ñ–æ—Ä–º–µ: __:__
–ù–∞–ø—Ä–∏–º–µ—Ä, 09:00''')
    else:
        send_messages(update, context, '–ß—Ç–æ –∂, —Ç–≤–æ–π –≤—ã–±–æ—Ä.', markup)
        schedule.clear()


# —Å–æ–æ–±—â–µ–Ω–∏–µ –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏—è
def send_reminder(context, chat_id: int):
    keyboard = [
        [InlineKeyboardButton('–í –º–µ–Ω—é', callback_data="–ù–∞–∑–∞–¥ –≤ –º–µ–Ω—é")]
    ]
    markup = InlineKeyboardMarkup(keyboard, one_time_keyboard=False)
    context.bot.send_message(chat_id, text='–ü—Ä–∏–≤–µ—Ç, –ø–æ—Ä–∞ –ø–æ–∑–∞–Ω–∏–º–∞—Ç—å—Å—è', reply_markup=markup)


# —É—Å—Ç–∞–Ω–æ–≤–∫–∞ —Ç–∞–π–º–µ—Ä–∞
def set_reminder(update, context: CallbackContext, time):
    chat_id = update.effective_chat.id
    # —É–¥–∞–ª—è–µ–º –ø—Ä–µ–¥—ã–¥—É—â—É—é –∑–∞–¥–∞—á—É, –µ—Å–ª–∏ –æ–Ω–∞ –±—ã–ª–∞
    schedule.clear()
    # –¥–æ–±–∞–≤–ª—è–µ–º –Ω–æ–≤—É—é –∑–∞–¥–∞—á—É –≤ –ø–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫
    schedule.every().day.at(time).do(send_reminder, context=context, chat_id=chat_id)


# —Ü–∏–∫–ª –¥–ª—è —Ç–∞–π–º–µ—Ä–∞
def run_scheduler():
    while True:
        schedule.run_pending()
        time.sleep(1)


# –≤–≤–æ–¥ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –¥–ª—è —Ç–∞–π–º–µ—Ä–∞
def handle_message(update, context):
    keyboard = [
        [InlineKeyboardButton('–ù–∞–∑–∞–¥ –≤ –º–µ–Ω—é', callback_data="–ù–∞–∑–∞–¥ –≤ –º–µ–Ω—é")]
    ]
    markup = InlineKeyboardMarkup(keyboard, one_time_keyboard=False)
    # –≤—Ä–µ–º—è, –∫–æ—Ç–æ—Ä–æ–µ –≤–≤–µ–ª –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å
    user_response = update.message.text
    # –ø—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞ –≤–∞–ª–∏–¥–Ω–æ—Å—Ç—å –∏ –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º –Ω–∞ —É—Å—Ç–∞–Ω–æ–≤–∫—É
    try:
        if datetime.datetime.strptime(user_response, '%H:%M').time():
            set_reminder(update, context, user_response)
            context.bot.send_message(chat_id=update.effective_chat.id,
                                     text=f'–ë—É–¥–µ–º –Ω–∞–ø–æ–º–∏–Ω–∞—Ç—å –∫–∞–∂–¥—ã–π –¥–µ–Ω—å –≤ {user_response} ‚Äî —Ç–æ—á–Ω–æ –Ω–µ –∑–∞–±—É–¥–µ—à—å!', reply_markup=markup)
    except(IndexError, ValueError):
        update.message.reply_text(f'–ù–µ –ø–æ–Ω–∏–º–∞—é, –ø–æ–ø—Ä–æ–±—É–π –µ—â–µ —Ä–∞–∑', reply_markup=markup)


# –¥–∏–∞–ª–æ–≥ —Ä–∞–∑–¥–µ–ª —Å —Ç–µ–æ—Ä–∏–µ–π
def conspect(update, context):
    keyboard = [
        [InlineKeyboardButton('–ë–∏–æ–ª–æ–≥–∏—è –∫–∞–∫ –Ω–∞—É–∫–∞', callback_data="–ë–∏–æ–ª–æ–≥–∏—è –∫–∞–∫ –Ω–∞—É–∫–∞")],
        [InlineKeyboardButton('–ú–æ–ª–µ–∫—É–ª—è—Ä–Ω–∞—è –∏ –∫–ª–µ—Ç–æ—á–Ω–∞—è –±–∏–æ–ª–æ–≥–∏—è', callback_data="–ú–æ–ª–µ–∫—É–ª—è—Ä–Ω–∞—è –∏ –∫–ª–µ—Ç–æ—á–Ω–∞—è –±–∏–æ–ª–æ–≥–∏—è")],
        [InlineKeyboardButton('–ì–µ–Ω–µ—Ç–∏–∫–∞', callback_data="–ì–µ–Ω–µ—Ç–∏–∫–∞")],
        [InlineKeyboardButton('–ë–∏–æ—Ç–µ—Ö–Ω–æ–ª–æ–≥–∏—è', callback_data="–ë–∏–æ—Ç–µ—Ö–Ω–æ–ª–æ–≥–∏—è")],
        [InlineKeyboardButton('–°–µ–ª–µ–∫—Ü–∏—è', callback_data="–°–µ–ª–µ–∫—Ü–∏—è")],
        # [InlineKeyboardButton('–û—Ä–≥–∞–Ω–∏–∑–º –∫–∞–∫ –±–∏–æ—Å–∏—Å—Ç–µ–º–∞', callback_data="–û—Ä–≥–∞–Ω–∏–∑–º –∫–∞–∫ –±–∏–æ—Å–∏—Å—Ç–µ–º–∞")],
        # [InlineKeyboardButton('–ú–Ω–æ–≥–æ–æ–±—Ä–∞–∑–∏–µ –æ—Ä–≥–∞–Ω–∏—á–µ—Å–∫–æ–≥–æ –º–∏—Ä–∞', callback_data="–ú–Ω–æ–≥–æ–æ–±—Ä–∞–∑–∏–µ –æ—Ä–≥–∞–Ω–∏—á–µ—Å–∫–æ–≥–æ –º–∏—Ä–∞")],
        # [InlineKeyboardButton('–ê–Ω–∞—Ç–æ–º–∏—è –∏ —Ñ–∏–∑–∏–æ–ª–æ–≥–∏—è —á–µ–ª–æ–≤–µ–∫–∞', callback_data="–ê–Ω–∞—Ç–æ–º–∏—è –∏ —Ñ–∏–∑–∏–æ–ª–æ–≥–∏—è —á–µ–ª–æ–≤–µ–∫–∞")],
        # [InlineKeyboardButton('–≠–≤–æ–ª—é—Ü–∏—è', callback_data="–≠–≤–æ–ª—é—Ü–∏—è")],
        # [InlineKeyboardButton('–≠–∫–æ–ª–æ–≥–∏—è', callback_data="–≠–∫–æ–ª–æ–≥–∏—è")],
        [InlineKeyboardButton('–ù–∞–∑–∞–¥ –≤ –º–µ–Ω—é', callback_data="–ù–∞–∑–∞–¥ –≤ –º–µ–Ω—é")]
    ]
    markup = InlineKeyboardMarkup(keyboard, one_time_keyboard=False)
    send_messages(update, context, '–í—ã–±–µ—Ä–∏ —Ä–∞–∑–¥–µ–ª', markup)


# –¥–∏–∞–ª–æ–≥ —Ä–∞–∑–¥–µ–ª –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏–π
def reminder(update, context):
    keyboard = [
        [InlineKeyboardButton('–ù–∞—Å—Ç—Ä–æ–∏—Ç—å –≤—Ä–µ–º—è —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π', callback_data="–í—Ä–µ–º—è —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π")],
        [InlineKeyboardButton('–û—Ç–∫–∞–∑–∞—Ç—å—Å—è –æ—Ç —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π', callback_data="–û—Ç–∫–∞–∑–∞—Ç—å—Å—è –æ—Ç —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π")],
    ]
    markup = InlineKeyboardMarkup(keyboard, one_time_keyboard=False)
    send_messages(update, context, '–ù–∞—Å—Ç—Ä–æ–∏—Ç—å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è', markup)


# —Ä–∞–∑–¥–µ–ª –ø—Ä–∞–∫—Ç–∏–∫–∏
def practice(update, context):
    pass


# –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–Ω–æ–ø–æ–∫
def biology_as_science(update, context):
    text = '''<a href='https://docs.google.com/document/d/1V8CRBD_NWHVGB5RVxbSXKdhwsmAe_irgcWOD-T3M7_Q/edit?usp=drive_link'>üìë –°–≤–æ–π—Å—Ç–≤–∞ –∏ —É—Ä–æ–≤–Ω–∏ –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏–∏ –±–∏–æ—Å–∏—Å—Ç–µ–º. –†–∞–∑–¥–µ–ª—ã –∏ –º–µ—Ç–æ–¥—ã –±–∏–æ–ª–æ–≥–∏–∏</a>

<a href='https://docs.google.com/document/d/17gU7Co2qcBKVhptiXlLvfKTOoh_zsnWFx-De6lYIdiQ/edit?usp=drive_link'>üìë –ò—Å—Å–ª–µ–¥–æ–≤–∞–Ω–∏–µ</a>'''
    keyboard = [
        [InlineKeyboardButton('–ö —Ä–∞–∑–¥–µ–ª–∞–º', callback_data="–ö —Ä–∞–∑–¥–µ–ª–∞–º")]
    ]
    markup = InlineKeyboardMarkup(keyboard, one_time_keyboard=False)
    chat_id = update.effective_chat.id
    context.bot.send_message(chat_id=chat_id, text=text, reply_markup=markup, parse_mode=telegram.ParseMode.HTML, disable_web_page_preview = True)


def molecular_and_cellular_biology_main(update, context):
    keyboard = [
        [InlineKeyboardButton('–ò—Å—Ç–æ—Ä–∏—è –∏ –º–µ—Ç–æ–¥—ã —Ü–∏—Ç–æ–ª–æ–≥–∏–∏. –ö–ª–µ—Ç–æ—á–Ω–∞—è —Ç–µ–æ—Ä–∏—è', callback_data="–ò—Å—Ç–æ—Ä–∏—è –∏ –º–µ—Ç–æ–¥—ã —Ü–∏—Ç–æ–ª–æ–≥–∏–∏")],
        [InlineKeyboardButton('–ë–∏–æ—Ö–∏–º–∏—è', callback_data="–ë–∏–æ—Ö–∏–º–∏—è")],
        [InlineKeyboardButton('–°—Ç—Ä–æ–µ–Ω–∏–µ –∫–ª–µ—Ç–∫–∏', callback_data="–°—Ç—Ä–æ–µ–Ω–∏–µ –∫–ª–µ—Ç–∫–∏")],
        [InlineKeyboardButton('–ú–µ—Ç–∞–±–æ–ª–∏–∑–º', callback_data="–ú–µ—Ç–∞–±–æ–ª–∏–∑–º")],
        [InlineKeyboardButton('–ú–∞—Ç—Ä–∏—á–Ω—ã–µ —Ä–µ–∞–∫—Ü–∏–∏', callback_data="–ú–∞—Ç—Ä–∏—á–Ω—ã–µ —Ä–µ–∞–∫—Ü–∏–∏")],
        [InlineKeyboardButton('–ö–ª–µ—Ç–æ—á–Ω—ã–π —Ü–∏–∫–ª', callback_data="–ö–ª–µ—Ç–æ—á–Ω—ã–π —Ü–∏–∫–ª")],
        [InlineKeyboardButton('–ö —Ä–∞–∑–¥–µ–ª–∞–º', callback_data="–ö —Ä–∞–∑–¥–µ–ª–∞–º")]
    ]
    markup = InlineKeyboardMarkup(keyboard, one_time_keyboard=False)
    send_messages(update, context, text='–í—ã–±–µ—Ä–∏ —Ç–µ–º—É', markup=markup)


def genetics(update, context):
    text = '''<a href='https://docs.google.com/document/d/15lipZln844hOfzfO5ZQfXJwZ_E1cjO3ciOAKEukInj0/edit?usp=sharing'>üìë –û—Å–Ω–æ–≤–Ω—ã–µ –≥–µ–Ω–µ—Ç–∏—á–µ—Å–∫–∏–µ –ø–æ–Ω—è—Ç–∏—è –∏ —Å–∏–º–≤–æ–ª—ã. –ú–µ—Ç–æ–¥—ã –≥–µ–Ω–µ—Ç–∏–∫–∏</a>

<a href='https://docs.google.com/document/d/1I6EyUTvBh4OW5s_Kfw4Cflx8gQmi9J_-DgDInYyf9vo/edit?usp=sharing'>üìë –ì–µ–Ω–µ—Ç–∏–∫–∞ –ú–µ–Ω–¥–µ–ª—è</a>

<a href = 'https://docs.google.com/document/d/1C4Wk499yuDfAhM4welcv_TCRn_-Q255GwP7CRCnnCQw/edit?usp=sharing'>üìë –ì–µ–Ω–µ—Ç–∏–∫–∞ –ú–æ—Ä–≥–∞–Ω–∞. –•—Ä–æ–º–æ—Å–æ–º–Ω–∞—è —Ç–µ–æ—Ä–∏—è –Ω–∞—Å–ª–µ–¥—Å—Ç–≤–µ–Ω–Ω–æ—Å—Ç–∏</a>

<a href = 'https://docs.google.com/document/d/19FIgIge7H-xlA1a8S-98keyqapXTaNXin-B0MZgdCK0/edit?usp=sharing'>üìë –ò–∑–º–µ–Ω—á–∏–≤–æ—Å—Ç—å. –ì–µ–Ω–µ—Ç–∏—á–µ—Å–∫–∏–µ –±–æ–ª–µ–∑–Ω–∏</a>'''
    keyboard = [
        [InlineKeyboardButton('–ö —Ä–∞–∑–¥–µ–ª–∞–º', callback_data="–ö —Ä–∞–∑–¥–µ–ª–∞–º")]
    ]
    markup = InlineKeyboardMarkup(keyboard, one_time_keyboard=False)
    chat_id = update.effective_chat.id
    context.bot.send_message(chat_id=chat_id, text=text, reply_markup=markup, parse_mode=telegram.ParseMode.HTML,
                             disable_web_page_preview=True)


def biotechnology(update, context):
    text = '''<a href='https://docs.google.com/document/d/1ipgZOoMw1KO1PKInvnStYFLgU7xI2F5ASkWpXyx1Tdo/edit?usp=sharing'>üìë –ë–∏–æ—Ç–µ—Ö–Ω–æ–ª–æ–≥–∏—è</a>'''
    keyboard = [
        [InlineKeyboardButton('–ö —Ä–∞–∑–¥–µ–ª–∞–º', callback_data="–ö —Ä–∞–∑–¥–µ–ª–∞–º")]
    ]
    markup = InlineKeyboardMarkup(keyboard, one_time_keyboard=False)
    chat_id = update.effective_chat.id
    context.bot.send_message(chat_id=chat_id, text=text, reply_markup=markup, parse_mode=telegram.ParseMode.HTML,
                             disable_web_page_preview=True)


def breeding(update, context):
    text = '''<a href='https://docs.google.com/document/d/16cYkwZXNVub2ylcaCYR5E1m4F8Pdx8BAQ7YR7-1KTlA/edit?usp=drive_link'>üìë –°–µ–ª–µ–∫—Ü–∏—è</a>'''
    keyboard = [
        [InlineKeyboardButton('–ö —Ä–∞–∑–¥–µ–ª–∞–º', callback_data="–ö —Ä–∞–∑–¥–µ–ª–∞–º")]
    ]
    markup = InlineKeyboardMarkup(keyboard, one_time_keyboard=False)
    chat_id = update.effective_chat.id
    context.bot.send_message(chat_id=chat_id, text=text, reply_markup=markup, parse_mode=telegram.ParseMode.HTML,
                             disable_web_page_preview=True)


def history_and_methods_citology(update, context):
    text = '''<a href='https://docs.google.com/document/d/1kA8Ue_5iLpen2GmOEIAfJByZfJxufh6R_xhY5Wavk10/edit?usp=sharing'>üìë –ò—Å—Ç–æ—Ä–∏—è –∏ –º–µ—Ç–æ–¥—ã —Ü–∏—Ç–æ–ª–æ–≥–∏–∏. –ö–ª–µ—Ç–æ—á–Ω–∞—è —Ç–µ–æ—Ä–∏—è</a>'''
    keyboard = [
        [InlineKeyboardButton('–ö —Ä–∞–∑–¥–µ–ª—É ¬´–ú–æ–ª–µ–∫—É–ª—è—Ä–Ω–∞—è –∏ –∫–ª–µ—Ç–æ—á–Ω–∞—è –±–∏–æ–ª–æ–≥–∏—è¬ª', callback_data="–ö —Ä–∞–∑–¥–µ–ª—É –º–æ–ª–µ–∫—É–ª—è—Ä–Ω–∞—è –±–∏–æ–ª–æ–≥–∏—è")]
    ]
    markup = InlineKeyboardMarkup(keyboard, one_time_keyboard=False)
    chat_id = update.effective_chat.id
    context.bot.send_message(chat_id=chat_id, text=text, reply_markup=markup, parse_mode=telegram.ParseMode.HTML,
                             disable_web_page_preview=True)


def biochemistry(update, context):
    text = '''<a href='https://docs.google.com/document/d/1v1nQ7noVqfkrt0gAp0QU8-9aafwNaK4zZbj2Y2OW5a4/edit?usp=sharing'>üìë –•–∏–º–∏—á–µ—Å–∫–∏–π —Å–æ—Å—Ç–∞–≤ –∫–ª–µ—Ç–∫–∏. –í–æ–¥–∞. –ú–∏–Ω–µ—Ä–∞–ª—å–Ω—ã–µ –≤–µ—â–µ—Å—Ç–≤–∞</a>

<a href='https://docs.google.com/document/d/1AuySgB2dddxSIPCRsaFn2S014y8v1jSBP1KJJ_iAvsA/edit?usp=sharing'>üìë –õ–∏–ø–∏–¥—ã</a>

<a href = 'https://docs.google.com/document/d/143tRQQUbF-QWQdfDAvV3ny2GL6JLM3yD6fQaaR3b3Ks/edit?usp=sharing'>üìë –£–≥–ª–µ–≤–æ–¥—ã</a>

<a href = 'https://docs.google.com/document/d/16WXZRksgYRACQrLb70Ok_4wXdOtfqlaKWXGAWnMqJUk/edit?usp=sharing'>üìë –ù—É–∫–ª–µ–∏–Ω–æ–≤—ã–µ –∫–∏—Å–ª–æ—Ç—ã. –ê–¢–§</a>

<a href = 'https://docs.google.com/document/d/1CMBsKh9_PdMzpeK5WvObAXNKlDtqqh3mYM6_nQA6ul0/edit?usp=sharing'>üìë –ë–µ–ª–∫–∏. –§–µ—Ä–º–µ–Ω—Ç—ã</a>'''
    keyboard = [
        [InlineKeyboardButton('–ö —Ä–∞–∑–¥–µ–ª—É ¬´–ú–æ–ª–µ–∫—É–ª—è—Ä–Ω–∞—è –∏ –∫–ª–µ—Ç–æ—á–Ω–∞—è –±–∏–æ–ª–æ–≥–∏—è¬ª',
                              callback_data="–ö —Ä–∞–∑–¥–µ–ª—É –º–æ–ª–µ–∫—É–ª—è—Ä–Ω–∞—è –±–∏–æ–ª–æ–≥–∏—è")]
    ]
    markup = InlineKeyboardMarkup(keyboard, one_time_keyboard=False)
    chat_id = update.effective_chat.id
    context.bot.send_message(chat_id=chat_id, text=text, reply_markup=markup, parse_mode=telegram.ParseMode.HTML,
                             disable_web_page_preview=True)


def cell_structure(update, context):
    text = '''<a href='https://docs.google.com/document/d/1NGdosXt8mkpFgRpK7Bf0Ry5XVdGeHiH1-6WWTBSgh_I/edit?usp=sharing'>üìë –ü—Ä–æ–∫–∞—Ä–∏–æ—Ç—ã –∏ —ç—É–∫–∞—Ä–∏–æ—Ç—ã</a>

<a href='https://docs.google.com/document/d/1nON2sdHiu0wL7JLZtvbXkRmwb53eqMAavBYgAK3YjoI/edit?usp=sharing'>üìë –°—Ç—Ä–æ–µ–Ω–∏–µ –ø—Ä–æ–∫–∞—Ä–∏–æ—Ç–∏—á–µ—Å–∫–æ–π –∫–ª–µ—Ç–∫–∏. –ë–∞–∫—Ç–µ—Ä–∏–∏ –∏ –∞—Ä—Ö–µ–∏</a>

<a href = 'https://docs.google.com/document/d/15x990_dywHVmcpIQncvdmKLLCV8saOZFSNHLBZGOUeA/edit?usp=sharing'>üìë –°—Ç—Ä–æ–µ–Ω–∏–µ —ç—É–∫–∞—Ä–∏–æ—Ç–∏—á–µ—Å–∫–æ–π –∫–ª–µ—Ç–∫–∏</a>'''

    keyboard = [
        [InlineKeyboardButton('–ö —Ä–∞–∑–¥–µ–ª—É ¬´–ú–æ–ª–µ–∫—É–ª—è—Ä–Ω–∞—è –∏ –∫–ª–µ—Ç–æ—á–Ω–∞—è –±–∏–æ–ª–æ–≥–∏—è¬ª',
                              callback_data="–ö —Ä–∞–∑–¥–µ–ª—É –º–æ–ª–µ–∫—É–ª—è—Ä–Ω–∞—è –±–∏–æ–ª–æ–≥–∏—è")]
    ]
    markup = InlineKeyboardMarkup(keyboard, one_time_keyboard=False)
    chat_id = update.effective_chat.id
    context.bot.send_message(chat_id=chat_id, text=text, reply_markup=markup, parse_mode=telegram.ParseMode.HTML,
                             disable_web_page_preview=True)


def metabolism(update, context):
    text = '''<a href='https://docs.google.com/document/d/1JHqaKDWGyHykpTrSjzcrBHqUV4ClDk031kj0CLTvtqU/edit?usp=sharing'>üìë –ú–µ—Ç–∞–±–æ–ª–∏–∑–º</a>

<a href='https://docs.google.com/document/d/14wt_qHqAuedkzwGs2znmR43QKeUKQIVH7aNPyLhG1-M/edit?usp=sharing'>üìë –ê–Ω–∞–±–æ–ª–∏–∑–º: —Ö–µ–º–æ—Å–∏–Ω—Ç–µ–∑ –∏ —Ñ–æ—Ç–æ—Å–∏–Ω—Ç–µ–∑</a>

<a href='https://docs.google.com/document/d/1bZeJRZv4es3vVe7DQuVOJUY2FcAuxVLz7Ob1ruNXIdg/edit?usp=sharing'>üìë –ö–∞—Ç–∞–±–æ–ª–∏–∑–º: –±—Ä–æ–∂–µ–Ω–∏–µ –∏ –∫–ª–µ—Ç–æ—á–Ω–æ–µ –¥—ã—Ö–∞–Ω–∏–µ</a>'''

    keyboard = [
        [InlineKeyboardButton('–ö —Ä–∞–∑–¥–µ–ª—É ¬´–ú–æ–ª–µ–∫—É–ª—è—Ä–Ω–∞—è –∏ –∫–ª–µ—Ç–æ—á–Ω–∞—è –±–∏–æ–ª–æ–≥–∏—è¬ª',
                              callback_data="–ö —Ä–∞–∑–¥–µ–ª—É –º–æ–ª–µ–∫—É–ª—è—Ä–Ω–∞—è –±–∏–æ–ª–æ–≥–∏—è")]
    ]
    markup = InlineKeyboardMarkup(keyboard, one_time_keyboard=False)
    chat_id = update.effective_chat.id
    context.bot.send_message(chat_id=chat_id, text=text, reply_markup=markup, parse_mode=telegram.ParseMode.HTML,
                             disable_web_page_preview=True)


def matrix_reactions(update, context):
    text = '''<a href='https://docs.google.com/document/d/1_O0of-Q1Ngw-BuosM-SVtHt09Cp7EyzMhyeWA07dOTc/edit?usp=sharing'>üìë –†–µ–ø–ª–∏–∫–∞—Ü–∏—è –î–ù–ö</a>

<a href='https://docs.google.com/document/d/19ki2hZ7bfwCil6pzt58jxPuSPQKzqKxj1EtZ-GKNOvw/edit?usp=sharing'>üìë –¢—Ä–∞–Ω—Å–∫—Ä–∏–ø—Ü–∏—è –∏ —Ç—Ä–∞–Ω—Å–ª—è—Ü–∏—è</a>'''

    keyboard = [
        [InlineKeyboardButton('–ö —Ä–∞–∑–¥–µ–ª—É ¬´–ú–æ–ª–µ–∫—É–ª—è—Ä–Ω–∞—è –∏ –∫–ª–µ—Ç–æ—á–Ω–∞—è –±–∏–æ–ª–æ–≥–∏—è¬ª',
                              callback_data="–ö —Ä–∞–∑–¥–µ–ª—É –º–æ–ª–µ–∫—É–ª—è—Ä–Ω–∞—è –±–∏–æ–ª–æ–≥–∏—è")]
    ]
    markup = InlineKeyboardMarkup(keyboard, one_time_keyboard=False)
    chat_id = update.effective_chat.id
    context.bot.send_message(chat_id=chat_id, text=text, reply_markup=markup, parse_mode=telegram.ParseMode.HTML,
                             disable_web_page_preview=True)


def cell_cycle(update, context):
    text = '''<a href='https://docs.google.com/document/d/18DfCOdE0V7TmNSV3pYbMLxmkFgQknoLauC6du38_5HM/edit?usp=sharing'>üìë –ö–ª–µ—Ç–æ—á–Ω—ã–π —Ü–∏–∫–ª</a>'''
    keyboard = [
        [InlineKeyboardButton('–ö —Ä–∞–∑–¥–µ–ª—É ¬´–ú–æ–ª–µ–∫—É–ª—è—Ä–Ω–∞—è –∏ –∫–ª–µ—Ç–æ—á–Ω–∞—è –±–∏–æ–ª–æ–≥–∏—è¬ª',
                              callback_data="–ö —Ä–∞–∑–¥–µ–ª—É –º–æ–ª–µ–∫—É–ª—è—Ä–Ω–∞—è –±–∏–æ–ª–æ–≥–∏—è")]
    ]
    markup = InlineKeyboardMarkup(keyboard, one_time_keyboard=False)
    chat_id = update.effective_chat.id
    context.bot.send_message(chat_id=chat_id, text=text, reply_markup=markup, parse_mode=telegram.ParseMode.HTML,
                             disable_web_page_preview=True)


def button(update, context):
    query = update.callback_query
    variant = query.data
    query.answer()

    if variant == '–£—á—É—Å—å –≤ 10 –∫–ª–∞—Å—Å–µ':
        update.effective_chat.send_message("–•–≤–∞–ª—é –∑–∞ —Ä–µ—à–µ–Ω–∏–µ –Ω–∞—á–∞—Ç—å –≥–æ—Ç–æ–≤–∏—Ç—å—Å—è —É–∂–µ —Å–µ–π—á–∞—Å!")
        grade = 10
        time.sleep(2)
        menu(update, context)
    if variant == '–£—á—É—Å—å –≤ 11 –∫–ª–∞—Å—Å–µ':
        update.effective_chat.send_message('–°–∞–º–æ–µ –≤—Ä–µ–º—è –Ω–∞—á–∞—Ç—å –ø–æ–¥–≥–æ—Ç–æ–≤–∫—É!')
        grade = 11
        time.sleep(2)
        menu(update, context)
    if variant == '–£ –º–µ–Ω—è gap year':
        update.effective_chat.send_message('–£–∂–µ –∑–Ω–∞–∫–æ–º —Å —Ñ–æ—Ä–º–∞—Ç–æ–º –ï–ì–≠, –¥–∞? –¢–æ–≥–¥–∞ –≤–ø–µ—Ä—ë–¥ –±–æ—Ç–∞—Ç—å, —Å–æ—Ç–∫–∞ —Å–∞–º–∞ —Å–µ–±—è –Ω–µ –ø–æ–ª—É—á–∏—Ç.')
        grade = 12
        time.sleep(2)
        menu(update, context)
    if variant == '–ù–∞ —Ä–∞–∑–≤–µ–¥–∫–µ':
        update.effective_chat.send_message('–ò—Å—Å–ª–µ–¥—É–π, —Å—Ç—Ä–∞–Ω–Ω–∏–∫. –ú–æ–∂–µ—Ç, –Ω–∞—Ç–∫–Ω—ë—à—å—Å—è –Ω–∞ —á—Ç–æ-–Ω–∏–±—É–¥—å –∏–Ω—Ç–µ—Ä–µ—Å–Ω–æ–µ...')
        time.sleep(2)
        menu(update, context)

    if variant == '–†–∞–∑–æ–±—Ä–∞—Ç—å—Å—è —Å —Ç–µ–æ—Ä–∏–µ–π':
        conspect(update, context)
    if variant == '–ü–æ–ø—Ä–∞–∫—Ç–∏–∫–æ–≤–∞—Ç—å—Å—è':
        practice(update, context)
    if variant == '–ù–∞—Å—Ç—Ä–æ–∏—Ç—å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è':
        reminder(update, context)

    if variant == '–ù–∞–∑–∞–¥ –≤ –º–µ–Ω—é':
        menu(update, context)
    if variant == '–ö —Ä–∞–∑–¥–µ–ª–∞–º':
        conspect(update, context)
    if variant == '–ö —Ä–∞–∑–¥–µ–ª—É –º–æ–ª–µ–∫—É–ª—è—Ä–Ω–∞—è –±–∏–æ–ª–æ–≥–∏—è':
        molecular_and_cellular_biology_main(update, context)

    if variant == '–í—Ä–µ–º—è —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π':
        timer(update, context, True)
    if variant == '–û—Ç–∫–∞–∑–∞—Ç—å—Å—è –æ—Ç —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π':
        timer(update, context, False)

    if variant == '–ë–∏–æ–ª–æ–≥–∏—è –∫–∞–∫ –Ω–∞—É–∫–∞':
        biology_as_science(update, context)
    if variant == '–ú–æ–ª–µ–∫—É–ª—è—Ä–Ω–∞—è –∏ –∫–ª–µ—Ç–æ—á–Ω–∞—è –±–∏–æ–ª–æ–≥–∏—è':
        molecular_and_cellular_biology_main(update, context)
    if variant == '–ò—Å—Ç–æ—Ä–∏—è –∏ –º–µ—Ç–æ–¥—ã —Ü–∏—Ç–æ–ª–æ–≥–∏–∏':
        history_and_methods_citology(update, context)
    if variant == '–ë–∏–æ—Ö–∏–º–∏—è':
        biochemistry(update, context)
    if variant == '–°—Ç—Ä–æ–µ–Ω–∏–µ –∫–ª–µ—Ç–∫–∏':
        cell_structure(update, context)
    if variant == '–ú–µ—Ç–∞–±–æ–ª–∏–∑–º':
        metabolism(update, context)
    if variant == '–ú–∞—Ç—Ä–∏—á–Ω—ã–µ —Ä–µ–∞–∫—Ü–∏–∏':
        matrix_reactions(update, context)
    if variant == '–ö–ª–µ—Ç–æ—á–Ω—ã–π —Ü–∏–∫–ª':
        cell_cycle(update, context)
    if variant == '–ì–µ–Ω–µ—Ç–∏–∫–∞':
        genetics(update, context)
    if variant == '–ë–∏–æ—Ç–µ—Ö–Ω–æ–ª–æ–≥–∏—è':
        biotechnology(update, context)
    if variant == '–°–µ–ª–µ–∫—Ü–∏—è':
        breeding(update, context)


# –æ—Å–Ω–æ–≤–Ω–æ–µ –æ–∫–Ω–æ
def menu(update, context):
    caption = '–ß–µ–º —Ö–æ—á–µ—à—å –∑–∞–Ω—è—Ç—å—Å—è?'
    keyboard = [
        [InlineKeyboardButton('–†–∞–∑–æ–±—Ä–∞—Ç—å—Å—è —Å —Ç–µ–æ—Ä–∏–µ–π', callback_data="–†–∞–∑–æ–±—Ä–∞—Ç—å—Å—è —Å —Ç–µ–æ—Ä–∏–µ–π")],
         [InlineKeyboardButton('–ü–æ–ø—Ä–∞–∫—Ç–∏–∫–æ–≤–∞—Ç—å—Å—è', callback_data="–ü–æ–ø—Ä–∞–∫—Ç–∏–∫–æ–≤–∞—Ç—å—Å—è")],
         [InlineKeyboardButton('–ù–∞—Å—Ç—Ä–æ–∏—Ç—å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è', callback_data="–ù–∞—Å—Ç—Ä–æ–∏—Ç—å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è")]
    ]
    markup = InlineKeyboardMarkup(keyboard, one_time_keyboard=False)
    send_photo_with_caption(update, context, caption, markup)


# –¢–æ—á–∫–∞ –≤—Ö–æ–¥–∞
def start(update, context):
    keyboard = [
        [
            InlineKeyboardButton('–£—á—É—Å—å –≤ 10 –∫–ª–∞—Å—Å–µ', callback_data="–£—á—É—Å—å –≤ 10 –∫–ª–∞—Å—Å–µ"),
            InlineKeyboardButton('–£—á—É—Å—å –≤ 11 –∫–ª–∞—Å—Å–µ', callback_data="–£—á—É—Å—å –≤ 11 –∫–ª–∞—Å—Å–µ"),
        ],
        [InlineKeyboardButton('–£ –º–µ–Ω—è gap year', callback_data="–£ –º–µ–Ω—è gap year"),
        InlineKeyboardButton('–ù–∞ —Ä–∞–∑–≤–µ–¥–∫–µ', callback_data="–ù–∞ —Ä–∞–∑–≤–µ–¥–∫–µ")]
    ]
    markup = InlineKeyboardMarkup(keyboard, one_time_keyboard=False)
    name = update.message.chat.first_name
    caption = '''–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π, {name}!

–ú—ã ‚Äî –ò–≤ –∏ –ù–∏–∫ ‚Äî –ø–æ–º–æ–∂–µ–º —Ç–µ–±–µ –ø–æ–¥–≥–æ—Ç–æ–≤–∏—Ç—å—Å—è –∫ –ï–ì–≠ –ø–æ –±–∏–æ–ª–æ–≥–∏–∏. 
–î–ª—è —ç—Ç–æ–≥–æ —É –Ω–∞—Å –µ—Å—Ç—å:

ü™º –∫–æ–Ω—Å–ø–µ–∫—Ç—ã –ø–æ –≤—Å–µ–º —Ç–µ–º–∞–º –∫–æ–¥–∏—Ñ–∏–∫–∞—Ç–æ—Ä–∞
ü™º —Ç—Ä–µ–Ω–∞–∂—ë—Ä –¥–ª—è –æ—Ç—Ä–∞–±–æ—Ç–∫–∏ –∑–∞–¥–∞–Ω–∏–π –∏–∑ –±–∞–Ω–∫–∞ –§–ò–ü–ò

–†–∞—Å—Å–∫–∞–∂–µ—à—å –æ —Å–µ–±–µ?'''.format(name=name)
    send_photo_with_caption(update, context, caption, markup)


# –æ—Å–Ω–æ–≤–Ω–∞—è
def main():
    updater = Updater("7944892380:AAGKYP--CEiTaNtj4JAAlBWrw1MpX0sqOKs", use_context=True)
    dp = updater.dispatcher
    scheduler_thread = Thread(target=run_scheduler, daemon=True)
    scheduler_thread.start()
    dp.add_handler(CommandHandler("start", start))
    dp.add_handler(CallbackQueryHandler(button))
    dp.add_handler(MessageHandler(Filters.text, handle_message))
    updater.start_polling()
    updater.idle()


if __name__ == '__main__':
    main()
